public class BinarySearch {

    // Recursive method to perform binary search
    public static int binarySearch(int[] array, int target, int left, int right) {
        // Base case: if left index exceeds right, target is not present
        if (left > right) {
            return -1;
        }
        // Find the middle index
        int mid = left + (right - left) / 2;

        // Check if the middle element is the target
        if (array[mid] == target) {
            return mid;
        }

        // Recursive case: search in the left half
        if (array[mid] > target) {
            return binarySearch(array, target, left, mid - 1);
        }
        
        // Recursive case: search in the right half
        return binarySearch(array, target, mid + 1, right);
    }

    public static void main(String[] args) {
        int[] sortedArray = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        int target = 7;
        int result = binarySearch(sortedArray, target, 0, sortedArray.length - 1);
        
        if (result != -1) {
            System.out.println("Element found at index: " + result);
        } else {
            System.out.println("Element not found");
        }
    }
}
