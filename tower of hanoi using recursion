public class TowersOfHanoi {

    // Recursive method to solve Towers of Hanoi
    public static void solve(int n, char from, char to, char aux) {
        // Base case: if only one disk, move it from source to destination
        if (n == 1) {
            System.out.println("Move disk 1 from " + from + " to " + to);
            return;
        }
        // Recursive case: move n-1 disks from source to auxiliary
        solve(n - 1, from, aux, to);
        // Move nth disk from source to destination
        System.out.println("Move disk " + n + " from " + from + " to " + to);
        // Move n-1 disks from auxiliary to destination
        solve(n - 1, aux, to, from);
    }

    public static void main(String[] args) {
        int numberOfDisks = 3; // Change this to test with other numbers
        solve(numberOfDisks, 'A', 'C', 'B');
    }
}
